name: Terraform management
on:
  workflow_call: {}
jobs:
  tflint:
    name: tflint
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        name: require GeoNet org
        run: |
          exit 1
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: GeoNet/terraform-linters-setup-tflint@07d1d6c7d9bb58ace1a3a6620c6d324905931dfe # master
        name: Setup TFLint
        with:
          tflint_version: v0.44.1
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Run TFLint
        run: tflint -f compact
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        name: require GeoNet org
        run: |
          exit 1
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: tfsec
        uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6 # v1.0.3
        with:
          github_token: ${{ github.token }}
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        name: require GeoNet org
        run: |
          exit 1
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
      - name: Terraform Init
        run: terraform init
      - name: Terraform Format
        id: format
        run: terraform fmt -check -diff=true -recursive
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
