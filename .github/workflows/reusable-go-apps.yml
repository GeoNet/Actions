name: reusable go apps
on:
  workflow_call:
    inputs:
      paths:
        required: false
        type: string
        description: |
          the Go entrypoint paths for applications, where there they have `package main`
          e.g: ./cmd/thing1 ./cmd/thing2
      buildSetup:
        type: string
        required: false
        description: |
          shell commands to setup the build environment
      testSetup:
        type: string
        required: false
        description: |
          shell commands to setup the test environment
      goTestExtraArgs:
        required: false
        type: string
        description: |
          extra args to pass `go test`
jobs:
  go-build:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-go-build-smoke-test.yml@main
    with:
      setup: ${{ inputs.buildSetup }}
      paths: ${{ inputs.paths }}
  gofmt:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-gofmt.yml@main
  golangci-lint:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-golangci-lint.yml@main
    with:
      setup: ${{ inputs.buildSetup }}
  go-test:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-go-test.yml@main
    with:
      setup: ${{ inputs.testSetup || inputs.buildSetup }}
      extraArgs: ${{ inputs.goTestExtraArgs }}
  go-vet:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-go-vet.yml@main
    with:
      setup: ${{ inputs.buildSetup }}
  govulncheck:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-govulncheck.yml@main
    with:
      setup: ${{ inputs.buildSetup }}
  goimports:
    if: ${{ contains(fromJSON('["workflow_call", "workflow_dispatch", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-goimports.yml@main
