name: reusable go test
on:
  workflow_call:
    inputs:
      setup:
        required: false
        type: string
        description: |
          shell commands to setup the test environment
      extraArgs:
        required: false
        type: string
        description: |
          extra args to pass `go test`
jobs:
  go-test:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        run: |
          exit 1
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
          check-latest: true
      - name: setup
        run: |
          eval '${{ inputs.setup }}'
      - name: test
        id: test
        env:
          EXTRA_ARGS: ${{ inputs.extraArgs }}
        run: |
          go test $EXTRA_ARGS -v -coverprofile /tmp/coverage.out -cover ./...
      - name: create coverage html
        id: coverage-html
        run: |
          go tool cover -html=/tmp/coverage.out -o /tmp/coverage.html
      - name: Upload test log
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        if: always()
        with:
          name: test-results
          path: |
            /tmp/coverage.out
            /tmp/coverage.html
          if-no-files-found: error
