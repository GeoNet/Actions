name: Reusable container image scan
env:
  VERSION_CRANE: v0.16.1
on:
  workflow_call:
    inputs:
      imageRefs:
        required: true
        type: string
        description: |
          a comma separated list of refs to a container image (one or more)
          e.g:
            - docker.io/library/nginx:stable
            - ghcr.io/bobymcbobs/sample-ko-monorepo/webthingy@sha256:7ec264f3bd6344ae7525e88a69a4e7f6e6b3eaf11549fb889e31a2861df27923
            - alpine:3.17
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        run: |
          exit 1
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - uses: GeoNet/yq@bbe305500687a5fe8498d74883c17f0f06431ac4 # master
      - id: set
        run: |
          echo "matrix=$(echo ${{ inputs.imageRefs }} | tr ',' ' ' | yq 'split(" ")|.[]|{"target":.}' -ojson | jq -rcM -s {"include":.})" >> $GITHUB_OUTPUT
      - name: check output
        run: |
          jq . <<< '${{ steps.set.outputs.matrix }}'
  scan:
    needs: prepare
    runs-on: ubuntu-latest
    if: ${{ needs.prepare.outputs.matrix }}
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: stable
          check-latest: true
      - uses: GeoNet/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # main
        with:
          version: ${{ env.VERSION_CRANE }}
      - name: Login to ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: get-digests
        id: get-digests
        env:
          DESTINATION: ${{ fromJSON(toJSON(matrix)).target }}
        run: |
          DESTINATION_DIGEST="$(crane digest "${DESTINATION}" || true)"
          (
            echo "DESTINATION-DIGEST"
            echo "$DESTINATION_DIGEST"
          ) | column -t
          echo "destination=${DESTINATION_DIGEST}" >> $GITHUB_OUTPUT
      - name: Run Trivy vulnerability scanner
        if: ${{ steps.get-digests.outputs.destination != null }}
        uses: aquasecurity/trivy-action@fbd16365eb88e12433951383f5e99bd901fc618f # 0.12.0
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          image-ref: "${{ fromJSON(toJSON(matrix)).target }}"
          format: "sarif"
          output: "trivy-results.sarif"
          # format: 'table'
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ steps.get-digests.outputs.destination != null }}
        uses: github/codeql-action/upload-sarif@1245696032ecf7d39f87d54daa406e22ddf769a8 # codeql-bundle-20230524
        with:
          sarif_file: "trivy-results.sarif"
