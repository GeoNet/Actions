name: Reusable Go build smoke test
on:
  workflow_call:
    inputs:
      paths:
        required: false
        type: string
        description: |
          the Go entrypoint paths for applications, where there they have `package main`
          e.g: ./cmd/thing1 ./cmd/thing2
      setup:
        required: false
        type: string
        description: |
          shell commands to setup the test environment
      working-directory:
        required: false
        type: string
        description: |
          the working directory to run the build
jobs:
  go-build-smoke-test:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        name: require GeoNet org
        run: |
          exit 1
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
          check-latest: true
      - id: run-info
        name: collect job run info
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -n "${{ inputs.paths }}" ]; then
            echo "paths=$(echo '${{ inputs.paths }}' | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            PATHS="$(go list -json ./... | jq -r -s '.[] | select (.Name == "main") | .ImportPath' | xargs)"
            echo "paths="$PATHS"" >> $GITHUB_OUTPUT
          fi
      - name: setup
        working-directory: ${{ inputs.working-directory }}
        run: |
          eval '${{ inputs.setup }}'
      - id: build
        name: build
        working-directory: ${{ inputs.working-directory }}
        env:
          PATHS: ${{ steps.run-info.outputs.paths }}
        run: |
          echo "$PATHS" | tr ' ' '\n' | xargs -i -n 1 go build -v -o /dev/null '{}'
