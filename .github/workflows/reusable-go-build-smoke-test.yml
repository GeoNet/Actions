name: Reusable Go build smoke test
on:
  workflow_call:
    inputs:
      paths:
        required: false
        type: string
        description: |
          the Go entrypoint paths for applications, where there they have `package main`
          e.g: ./cmd/thing1 ./cmd/thing2
      setup:
        required: false
        type: string
        description: |
          shell commands to setup the test environment
      working-directory:
        required: false
        type: string
        description: |
          the working directory to run the build
jobs:
  go-build-smoke-test:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        run: |
          exit 1
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - id: run-info
        name: collect job run info
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -n "${{ inputs.paths }}" ]; then
            echo "paths=$(echo '${{ inputs.paths }}' | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            PATHS="$(grep -r 'package main' | sort | cut -d ':' -f1 | grep '.go$' | xargs -n 1 dirname | sort | uniq | grep -v vendor | xargs -i echo './{}' | xargs)"
            echo "paths="$PATHS"" >> $GITHUB_OUTPUT
          fi
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
          check-latest: true
      - name: setup
        working-directory: ${{ inputs.working-directory }}
        run: |
          eval '${{ inputs.setup }}'
      - id: build
        working-directory: ${{ inputs.working-directory }}
        env:
          PATHS: ${{ steps.run-info.outputs.paths }}
        run: |
          echo "$PATHS" | tr ' ' '\n' | xargs -i -n 1 go build -v -o /dev/null './{}'
