name: reusable policy conformance
on:
  workflow_call:
    inputs:
      config:
        type: string
        default: |
          # https://github.com/siderolabs/conform#getting-started
          # https://www.conventionalcommits.org/en/v1.0.0/
          policies:
            - type: commit
              spec:
                dco: false
                gpg:
                  required: false
                  gitHubOrganization: GeoNet
                spellcheck:
                  locale: UK
                maximumOfOneCommit: false
                header:
                  length: 89
                  imperative: true
                  case: lower
                  invalidLastCharacters: .
                body:
                  required: true
                conventional:
                  types:
                    - chore
                    - ci
                    - docs
                    - feat
                    - fix
                    - refactor
                    - release
                    - revert
                    - style
                    - test
                  scopes: [".*"]
jobs:
  conform:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.repository, 'GeoNet/') == false }}
        run: |
          exit 1
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - id: determine-existing-config
        run: |
          if [ -f .conform.yaml ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          fi
      - name: write config
        if: ${{ steps.determine-existing-config.outputs.exists != 'true' }}
        run: |
          cat << EOF > .conform.yaml
          ${{ inputs.config }}
          EOF
      - name: conform
        env:
          INPUT_TOKEN: ${{ github.token }}
        run: |
          docker run \
            -e "ACTIONS_CACHE_URL" \
            -e "ACTIONS_RUNTIME_TOKEN" \
            -e "ACTIONS_RUNTIME_URL" \
            -e "GITHUB_ACTION" \
            -e "GITHUB_ACTION_REF" \
            -e "GITHUB_ACTION_REPOSITORY" \
            -e "GITHUB_ACTOR" \
            -e "GITHUB_ACTOR_ID" \
            -e "GITHUB_API_URL" \
            -e "GITHUB_BASE_REF" \
            -e "GITHUB_ENV" \
            -e "GITHUB_EVENT_NAME" \
            -e "GITHUB_EVENT_PATH" \
            -e "GITHUB_GRAPHQL_URL" \
            -e "GITHUB_HEAD_REF" \
            -e "GITHUB_JOB" \
            -e "GITHUB_OUTPUT" \
            -e "GITHUB_PATH" \
            -e "GITHUB_REF" \
            -e "GITHUB_REF_NAME" \
            -e "GITHUB_REF_PROTECTED" \
            -e "GITHUB_REF_TYPE" \
            -e "GITHUB_REPOSITORY" \
            -e "GITHUB_REPOSITORY_ID" \
            -e "GITHUB_REPOSITORY_OWNER" \
            -e "GITHUB_REPOSITORY_OWNER_ID" \
            -e "GITHUB_RETENTION_DAYS" \
            -e "GITHUB_RUN_ATTEMPT" \
            -e "GITHUB_RUN_ID" \
            -e "GITHUB_RUN_NUMBER" \
            -e "GITHUB_SERVER_URL" \
            -e "GITHUB_SHA" \
            -e "GITHUB_STATE" \
            -e "GITHUB_STEP_SUMMARY" \
            -e "GITHUB_TRIGGERING_ACTOR" \
            -e "GITHUB_WORKFLOW" \
            -e "GITHUB_WORKFLOW_REF" \
            -e "GITHUB_WORKFLOW_SHA" \
            -e "GITHUB_WORKSPACE" \
            -e "HOME" \
            -e "INPUT_ARGS" \
            -e "RUNNER_ARCH" \
            -e "RUNNER_ENVIRONMENT" \
            -e "RUNNER_NAME" \
            -e "RUNNER_OS" \
            -e "RUNNER_TEMP" \
            -e "RUNNER_TOOL_CACHE" \
            -e "RUNNER_WORKSPACE" \
            -e CI=true \
            -e GITHUB_ACTIONS=true \
            -e GITHUB_EVENT_PATH=/github/workflow/event.json \
            -e INPUT_TOKEN="$INPUT_TOKEN" \
            -v "$PWD":"/github/workspace" \
            -v "/home/runner/work/_temp/_github_home":"/github/home" \
            -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" \
            -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands" \
            --workdir /github/workspace \
            ghcr.io/geonet/base-images/siderolabs-conform:v0.1.0-alpha.27 \
            enforce --commit-ref="refs/remotes/origin/main" --reporter=github
